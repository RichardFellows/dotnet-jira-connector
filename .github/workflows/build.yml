name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'
  
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Display .NET info
      run: dotnet --info
      
    - name: Restore NuGet packages
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore --verbosity minimal
      
    - name: Run unit tests
      run: |
        dotnet test \
          --configuration Release \
          --no-build \
          --verbosity normal \
          --filter "FullyQualifiedName!~DuckDbService" \
          --logger "trx;LogFileName=test-results.trx" \
          --collect:"XPlat Code Coverage"
      
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: '**/test-results.trx'
        reporter: dotnet-trx
        fail-on-error: true
        
    - name: Build console application
      run: |
        dotnet publish src/JiraConnector.Console/JiraConnector.Console.csproj \
          --configuration Release \
          --runtime linux-x64 \
          --self-contained false \
          --output ./artifacts
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: github.ref == 'refs/heads/main'
      with:
        name: jira-connector-linux-x64
        path: ./artifacts/
        retention-days: 7
        
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore packages
      run: dotnet restore
      
    - name: Check code formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic
      
    - name: Build with warnings as errors
      run: dotnet build --configuration Release --verbosity normal /p:TreatWarningsAsErrors=true